<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.realai.online.core.dao.BatchRecordDao">
    <resultMap type="cn.realai.online.core.entity.BatchRecord" id="BatchRecordMap">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="y_table" property="ytableDataSource" jdbcType="VARCHAR"/>
        <result column="x_table_homo" property="xtableHomogeneousDataSource" jdbcType="VARCHAR"/>
        <result column="x_table_heter" property="xtableHeterogeneousDataSource" jdbcType="VARCHAR"/>
        <result column="model_id" property="modelId" jdbcType="BIGINT"/>
        <result column="experiment_id" property="experimentId" jdbcType="BIGINT"/>
        <result column="service_id" property="serviceId" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="BIGINT"/>
        <result column="down_url" property="downUrl" jdbcType="VARCHAR"/>
        <result column="batch_type" property="batchType" jdbcType="INTEGER"/>
        <result column="batch_name" property="batchName" jdbcType="VARCHAR"/>
  		<result column="batch_date" property="batchDate" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="err_msg" property="errorMsg" jdbcType="VARCHAR"/>
        <result column="del_flag" property="delFlag" jdbcType="TINYINT"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="offline_times" property="offlineTimes" jdbcType="INTEGER"/>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO batch_record (y_table , x_table_homo, x_table_heter, model_id, experiment_id, service_id,
        	create_time, down_url, batch_type, batch_name, status, err_msg, del_flag, remark, offline_times, batch_date)
        VALUE (#{ytableDataSource},#{xtableHomogeneousDataSource},#{xtableHeterogeneousDataSource},
        	#{modelId},#{experimentId},#{serviceId},#{createTime},#{downUrl},#{batchType},
        	#{batchName}, #{status}, #{errorMsg}, #{delFlag}, #{remark},#{offlineTimes},#{batchDate})
    </insert>

    <select id="findBatchRecordList" resultMap="BatchRecordMap" parameterType="cn.realai.online.core.bo.BatchRecordBO">
          SELECT * FROM batch_record
          <where>
              del_flag = 0
              <if test="experimentId!=null">
                 AND experiment_id = #{experimentId}
              </if>
              <if test="tranFlag==true">
                  AND batch_type =3
              </if>
              <if test="tranFlag==false">
                  AND batch_type in (1,2)
                  AND status = 3
              </if>
          </where>
    </select>  

    <update id="update" parameterType="cn.realai.online.core.entity.BatchRecord">
        UPDATE batch_record
        <trim prefix="set" suffixOverrides=",">
            <if test="downUrl!=null">down_url=#{downUrl},</if>
        </trim>
        <where>
            id =#{id}
        </where>
    </update>  

    <update id="delete" parameterType="java.util.List">
        update batch_record set del_flag = 1
        where id in
        <foreach item="id" collection="list" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <select id="get" resultMap="BatchRecordMap" parameterType="java.lang.Long">
        SELECT * from batch_record
        <where>
            id =#{id}
        </where>
    </select>


    <resultMap type="cn.realai.online.core.bo.BatchListBO" id="BatchListMap">
        <result column="batchId" property="batchId" jdbcType="BIGINT"/>
        <result column="modelId" property="modelId" jdbcType="BIGINT"/>
        <result column="modelName" property="modelName" jdbcType="VARCHAR"/>
        <result column="experimentId" property="experimentId" jdbcType="BIGINT"/>
        <result column="experimentName" property="experimentName" jdbcType="VARCHAR"/>
        <result column="releaseTime" property="releaseTime" jdbcType="BIGINT"/>
        <result column="serviceId" property="serviceId" jdbcType="BIGINT"/>
        <result column="serviceName" property="serviceName" jdbcType="VARCHAR"/>
        <result column="batchTimes" property="batchTimes" jdbcType="INTEGER"/>
        <result column="offlineTimes" property="offlineTimes" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="batchCreateTime" property="batchCreateTime" jdbcType="BIGINT"/>
        <result column="downUrl" property="downUrl" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>
    <select id="selectList" resultMap="BatchListMap">
        select br.id as batchId,
        m.id as modelId,
        m.name as modelName,
        ep.id as experimentId,
        ep.name as experimentName,
        m.create_time as releaseTime,
        s.id as serviceId,
        s.name as serviceName,
        s.batch_times as batchTimes,
        br.offline_times as offlineTimes,
        br.status as status,
        br.create_time as batchCreateTime,
        br.down_url as downUrl,
        br.remark as remark
        from batch_record as br
        join service as s on br.service_id = s.id
        join experiment as ep on br.experiment_id = ep.id
        join model as m on br.model_id = m.id
        <where>
            br.del_flag = 0
            and br.batch_type != 3
            <if test="batchListBO!=null and batchListBO.modelName!=null">
                and m.name like '%${batchListBO.modelName}%'
            </if>
            <if test="batchListBO!=null and batchListBO.status!=null">
                and br.status = #{batchListBO.status}
            </if>
            <if test="minTime!=null">
                and <![CDATA[ br.create_time >= #{minTime} ]]>
            </if>
            <if test="maxTime!=null">
                and <![CDATA[ br.create_time <= #{maxTime} ]]>
            </if>
        </where>
        order by br.id desc
    </select>


    <select id="getByEntity" resultMap="BatchRecordMap" parameterType="cn.realai.online.core.entity.BatchRecord">
        SELECT * FROM batch_record
        <where>
            del_flag = 0
            <if test="experimentId!=null">
                AND experiment_id = #{experimentId}
            </if>
            <if test="batchType!=null">
                AND batch_type = #{batchType}
            </if>
            <if test="batchName!=null">
                AND batch_name = #{batchName}
            </if>
            <if test="id!=null">
                AND id = #{id}
            </if>
            <if test="serviceId!=null">
                AND service_id = #{serviceId}
            </if>
        </where>
    </select>

    <resultMap type="cn.realai.online.core.bo.BatchDetailBO" id="BatchDetailMap">
        <result column="batchId" property="batchId" jdbcType="BIGINT"/>
        <result column="serviceId" property="serviceId" jdbcType="BIGINT"/>
        <result column="serviceName" property="serviceName" jdbcType="VARCHAR"/>
        <result column="experimentId" property="experimentId" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="offlineTimes" property="offlineTimes" jdbcType="INTEGER"/>
        <result column="xtabaleHeter" property="xtabaleHeter" jdbcType="VARCHAR"/>
        <result column="xtableHomo" property="xtableHomo" jdbcType="VARCHAR"/>
        <result column="ytable" property="ytable" jdbcType="VARCHAR"/>
        <result column="createTime" property="createTime" jdbcType="BIGINT"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>
    <select id="selectDetail" resultMap="BatchDetailMap">
        select br.id as batchId,
        br.service_id as serviceId,
        sv.name as serviceName,
        br.experiment_id as experimentId,
        br.status,
        br.offline_times as offlineTimes,
        br.x_table_heter as xtabaleHeter,
        br.x_table_homo as xtableHomo,
        br.y_table as ytable,
        br.create_time as createTime,
        br.remark as remark
        from batch_record as br
        join service as sv on br.service_id = sv.id
        left join experiment as ep on br.experiment_id = ep.id
        <where>
            br.id = #{batchId}
        </where>
    </select>

	<select id="getBatchRecordByEidAndDate" resultMap="BatchRecordMap">
    	select * 
    	from batch_record
    	where experiment_id = #{eid}
		and batch_date = #{batchDate}
		and batchType = #{batchType}
    </select>

	<update id="maintainDownUrl">
		update batch_record
		set down_url = #{downUrl}
		where id = #{batchId}
	</update>
	
	<update id="maintainErrorMsg">
		update batch_record
		set status = #{status},
			err_msg = #{errorMsg}
		where id = #{batchId}
	</update>

	<update id="updateBatchRecordStatus">
		update batch_record
		set status = #{status}
		where id = #{batchId}
	</update>

</mapper>
