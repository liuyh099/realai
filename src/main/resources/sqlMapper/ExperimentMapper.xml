<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.realai.online.core.dao.ExperimentDao">
    <resultMap type="cn.realai.online.core.entity.Experiment" id="ExperimentMap">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="parent_id" property="parentId" jdbcType="BIGINT"/>
        <result column="service_id" property="serviceId" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="algorithm_type" property="algorithmType" jdbcType="INTEGER"/>
        <result column="releas_status" property="releasStatus" jdbcType="INTEGER"/>
        <result column="y_table" property="ytableDataSource" jdbcType="VARCHAR"/>
        <result column="x_table_homo" property="xtableHomogeneousDataSource" jdbcType="VARCHAR"/>
        <result column="x_table_heter" property="xtableHeterogeneousDataSource" jdbcType="VARCHAR"/>
        <result column="x_table_meaning" property="xtableMeaningDataSource" jdbcType="VARCHAR"/>
        <result column="verification_set" property="verificationSet" jdbcType="INTEGER"/>
        <result column="valid_sample_type" property="validSampleType" jdbcType="INTEGER"/>
        <result column="test_sample_type" property="testSampleType" jdbcType="INTEGER"/>
        <result column="train_ratio" property="trainRatio" jdbcType="INTEGER"/>
        <result column="test_ratio" property="testRatio" jdbcType="INTEGER"/>
        <result column="valid_ratio" property="validRatio" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="BIGINT"/>
        <result column="training_time" property="trainingTime" jdbcType="BIGINT"/>
        <result column="release_time" property="releaseTime" jdbcType="BIGINT"/>
        <result column="tuning_count" property="tuningCount" jdbcType="INTEGER"/>
        <result column="create_user_id" property="createUserId" jdbcType="INTEGER"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="sample_review" property="sampleReview" jdbcType="VARCHAR"/>
        <result column="model_url" property="modelUrl" jdbcType="VARCHAR"/>
        <result column="seg_image_url" property="segmentationStatisticsImageUrl" jdbcType="VARCHAR"/>
        <result column="bad_image_url" property="badTopCountImageUrl" jdbcType="VARCHAR"/>
        <result column="roc_test_image_url" property="rocTestImageUrl" jdbcType="VARCHAR"/>
        <result column="roc_train_image_url" property="rocTrainImageUrl" jdbcType="VARCHAR"/>
        <result column="roc_validate_image_url" property="rocValidateImageUrl" jdbcType="VARCHAR"/>
        <result column="ks_test_image_url" property="ksTestImageUrl" jdbcType="VARCHAR"/>
        <result column="ks_train_image_url" property="ksTrainImageUrl" jdbcType="VARCHAR"/>
        <result column="ks_validate_image_url" property="ksValidateImageUrl" jdbcType="VARCHAR"/>
        <result column="pre_finish" property="preFinish" jdbcType="INTEGER"/>
        <result column="serviceName" property="serviceName" jdbcType="VARCHAR"/>
        <result column="err_msg" property="errorMsg" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">

    </sql>

    <select id="getById" resultMap="ExperimentMap" parameterType="java.lang.Long">
        select *
		from experiment
		where id = #{id}
    </select>

    <select id="findPublishByServiceId" resultMap="ExperimentMap">
        select *
		from experiment
		where service_id = #{serviceId} AND releas_status in(2,3)
    </select>
  
    <update id="updateName">
        UPDATE experiment set name =#{name} where id=#{id}
    </update>

    <update id="updateNameAndRemark" parameterType="cn.realai.online.core.entity.Experiment">
        UPDATE experiment set name =#{name},remark=#{remark} where id=#{id}
    </update>

    <select id="findNotPublishExperimentIds" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT id FROM experiment WHERE id in
        <foreach collection="ids" separator="," open="(" close=")" item="item">
            #{item}
        </foreach>
        AND releas_status NOT IN (2,3)
    </select>

    <update id="logicDeleteExperiment" parameterType="java.lang.Long">
        UPDATE experiment SET status = 7 WHERE id IN
        <foreach collection="ids" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </update>

    <insert id="insert" parameterType="cn.realai.online.core.entity.Experiment">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        INSERT INTO experiment
        (name,service_id,status,algorithm_type,releas_status,y_table,x_table_homo,x_table_heter,x_table_meaning,create_time,create_user_id)
        VALUE
        (#{name},#{serviceId},#{status},#{algorithmType},#{releasStatus},#{ytableDataSource},#{xtableHomogeneousDataSource},#{xtableHeterogeneousDataSource},#{xtableMeaningDataSource},#{createTime},#{createUserId})
    </insert>

    <insert id="doubleCreate" parameterType="cn.realai.online.core.entity.Experiment">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        INSERT INTO experiment
        (name,service_id,status,algorithm_type,releas_status,y_table,x_table_homo,x_table_heter,x_table_meaning,create_time,
        verification_set,valid_sample_type,test_sample_type,train_ratio,test_ratio,valid_ratio,pre_finish,parent_id)
        VALUE
        (#{name},#{serviceId},#{status},#{algorithmType},#{releasStatus},#{ytableDataSource},#{xtableHomogeneousDataSource},#{xtableHeterogeneousDataSource},#{xtableMeaningDataSource},#{createTime},
        #{verificationSet},#{validSampleType},#{testSampleType},#{trainRatio},#{testRatio},#{validRatio},#{preFinish},#{parentId})
    </insert>

    <update id="selectFileUpdate" parameterType="cn.realai.online.core.entity.Experiment">
		UPDATE experiment SET
		name=#{name},
		service_id=#{serviceId},
		y_table=#{ytableDataSource},
		x_table_homo=#{xtableHomogeneousDataSource},
		x_table_heter=#{xtableHeterogeneousDataSource},
		x_table_meaning=#{xtableMeaningDataSource}
		where id =#{id}
	</update>

    <update id="updateParam" parameterType="cn.realai.online.core.entity.Experiment">
        UPDATE experiment SET
        verification_set=#{verificationSet},
        valid_sample_type=#{validSampleType},
        test_sample_type=#{testSampleType},
        train_ratio=#{trainRatio},
        test_ratio=#{testRatio},
        valid_ratio=#{validRatio}
        <if test="status!=null">
            ,status=#{status}
        </if>
        where id =#{id}
    </update>

    <select id="selectExperimentById" resultMap="ExperimentMap">
		select * ,b.name AS "serviceName"
		from experiment a  LEFT JOIN service b ON a.service_id = b.id
		where a.id = #{id}
	</select>

    <update id="maintainPreprocessStatus">
		update experiment 
		set pre_finish = #{preFinishStatus},
			err_msg = #{errMsg}
		where id = #{experimentId}
	</update>

    <update id="updateExperimentStatus">
		update experiment 
		set status = #{status}
		where id = #{experimentId}
	</update>

    <update id="train">
        update experiment
		set status = #{status},
		training_time = #{trainTime}
		where id = #{experimentId}
    </update>



    <update id="updateExperimentOffline">
        update experiment
		set releas_status = #{status}
		where id != #{id} and service_id = #{serviceId}
    </update>

    <update id="updateExperimentTrainStatus">
        update experiment
		set releas_status = #{status},release_time =#{publishTime}
		where id = #{id}
    </update>




    <select id="getLastServerId" resultType="java.lang.Long">
        SELECT service_id FROM experiment WHERE releas_status = 2 ORDER BY release_time DESC LIMIT 1
    </select>



    <resultMap type="cn.realai.online.core.entity.Experiment" id="ExperimentListMap">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="service_id" property="serviceId" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="algorithm_type" property="algorithmType" jdbcType="INTEGER"/>
        <result column="releas_status" property="releasStatus" jdbcType="INTEGER"/>
        <result column="y_table" property="ytableDataSource" jdbcType="VARCHAR"/>
        <result column="x_table_homo" property="xtableHomogeneousDataSource" jdbcType="VARCHAR"/>
        <result column="x_table_heter" property="xtableHeterogeneousDataSource" jdbcType="VARCHAR"/>
        <result column="x_table_meaning" property="xtableMeaningDataSource" jdbcType="VARCHAR"/>
        <result column="verification_set" property="verificationSet" jdbcType="INTEGER"/>
        <result column="valid_sample_type" property="validSampleType" jdbcType="INTEGER"/>
        <result column="test_sample_type" property="testSampleType" jdbcType="INTEGER"/>
        <result column="train_ratio" property="trainRatio" jdbcType="INTEGER"/>
        <result column="test_ratio" property="testRatio" jdbcType="INTEGER"/>
        <result column="valid_ratio" property="validRatio" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="BIGINT"/>
        <result column="training_time" property="trainingTime" jdbcType="BIGINT"/>
        <result column="release_time" property="releaseTime" jdbcType="BIGINT"/>
        <result column="tuning_count" property="tuningCount" jdbcType="INTEGER"/>
        <result column="create_user_id" property="createUserId" jdbcType="INTEGER"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="sample_review" property="sampleReview" jdbcType="VARCHAR"/>
        <result column="model_url" property="modelUrl" jdbcType="VARCHAR"/>
        <result column="seg_image_url" property="segmentationStatisticsImageUrl" jdbcType="VARCHAR"/>
        <result column="bad_image_url" property="badTopCountImageUrl" jdbcType="VARCHAR"/>
        <result column="roc_test_image_url" property="rocTestImageUrl" jdbcType="VARCHAR"/>
        <result column="roc_train_image_url" property="rocTrainImageUrl" jdbcType="VARCHAR"/>
        <result column="roc_validate_image_url" property="rocValidateImageUrl" jdbcType="VARCHAR"/>
        <result column="ks_test_image_url" property="ksTestImageUrl" jdbcType="VARCHAR"/>
        <result column="ks_train_image_url" property="ksTrainImageUrl" jdbcType="VARCHAR"/>
        <result column="ks_validate_image_url" property="ksValidateImageUrl" jdbcType="VARCHAR"/>
        <result column="pre_finish" property="preFinish" jdbcType="INTEGER"/>
        <result column="serviceName" property="serviceName" jdbcType="VARCHAR"/>
        <result column="publish_count" property="publishCount" jdbcType="VARCHAR"/>
    </resultMap>


    <select id="findList" resultMap="ExperimentListMap" parameterType="cn.realai.online.core.entity.Experiment">
        SELECT *,b.name AS "serviceName",(SELECT count(1) FROM experiment c WHERE c.service_id =a.service_id AND c.releas_status IN (2,3)) AS publish_count FROM experiment a LEFT JOIN service b ON a.service_id = b.id
        <where>
            1=1
            <if test="name!=null and name!=''">
                AND a.name LIKE CONCAT('%',#{name},'%')
            </if>
            <if test="status!=null">
                AND a.status= #{status}
            </if>
            <if test="releasStatus!=null">
                AND a.releas_status= #{releasStatus}
            </if>
            <if test="serviceId!=null">
                AND a.service_id= #{serviceId}
            </if>
            AND a.status !=7
        </where>
        ORDER BY a.create_time DESC
    </select>


    <select id="checkName" resultMap="ExperimentMap" parameterType="cn.realai.online.core.entity.Experiment">
        SELECT * FROM experiment
        <where>
            1=1
            <if test="name!=null and name!=''">
                AND name = #{name}
            </if>
            <if test="status!=null">
                AND status= #{status}
            </if>
            <if test="releasStatus!=null">
                AND releas_status= #{releasStatus}
            </if>
        </where>
    </select>


	<delete id="deleteExperimentByIds" parameterType="java.lang.Long">
		DELETE FROM experiment
		<where>
			<choose>
				<when test="ids!=null and ids.size()>0">
					<foreach collection="ids" item="id" separator="," open="id in(" close=")">
						#{id}
					</foreach>
					AND releas_status NOT IN (3,4)
				</when>
				<otherwise>
					1=2
				</otherwise>
			</choose>
		</where>
	</delete>

	<select id="findByServiceIdAndReleaseStatus" resultType="java.util.HashMap">
		select
		ep.id as experimentId,
		ep.name as experimentName,
		sv.id as serviceId,
		sv.name as serviceName,
        sv.batch_times as batchTimes
		from service as sv
		join experiment as ep on ep.service_id = sv.id
		<where>
			sv.id = #{serviceId}
            and ep.releas_status = #{releaseStatus}
		</where>
		limit 1
	</select>

	<update id="trainResultMaintain">
		update experiment
		set sample_review = #{sampleReview},
			model_url = #{modelUrl},
			seg_image_url = #{segmentationStatisticsImageUrl},
			bad_image_url = #{badTopCountImageUrl},
			roc_test_image_url = #{rocTestImageUrl},
			roc_train_image_url = #{rocTrainImageUrl},
			roc_validate_image_url = #{rocValidateImageUrl},
			ks_test_image_url = #{ksTestImageUrl},
			ks_train_image_url = #{ksTrainImageUrl},
			ks_validate_image_url = #{ksValidateImageUrl},
			status = #{status}
		where id = #{experimentId}
	</update>
	
	<update id="maintainErrorMsg">
		update experiment
		set err_msg = #{errMsg},
			status = #{status}
		where id = #{experimentId}
	</update>

</mapper> 