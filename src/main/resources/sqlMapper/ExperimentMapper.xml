<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.realai.online.core.dao.ExperimentDao">
  <resultMap type="cn.realai.online.core.entity.Experiment" id="ExperimentMap">
  	    <id column="id" property="id" jdbcType="BIGINT"/>
  	    <result column="name" property="name" jdbcType="VARCHAR"/>
  	    <result column="service_id" property="serviceId" jdbcType="BIGINT"/>
  	    <result column="status" property="status" jdbcType="INTEGER"/>
  	    <result column="algorithm_type" property="algorithmType" jdbcType="INTEGER"/>
  	    <result column="releas_status" property="releasStatus" jdbcType="INTEGER"/>
  	    <result column="y_table" property="ytableDataSource" jdbcType="VARCHAR"/>
  	    <result column="x_table_homo" property="xtableHomogeneousDataSource" jdbcType="VARCHAR"/>
  	    <result column="x_table_heter" property="xtableHeterogeneousDataSource" jdbcType="VARCHAR"/>
  	    <result column="x_table_meaning" property="xtableMeaningDataSource" jdbcType="VARCHAR"/>
  	    <result column="verification_set" property="verificationSet" jdbcType="INTEGER"/>
  	    <result column="sample_type" property="sampleSplitType" jdbcType="INTEGER"/>
  	    <result column="train_ratio" property="trainRatio" jdbcType="INTEGER"/>
  	    <result column="test_ratio" property="testRatio" jdbcType="INTEGER"/>
  	    <result column="valid_ratio" property="validRatio" jdbcType="INTEGER"/>
  	    <result column="create_time" property="createTime" jdbcType="BIGINT"/>
  	    <result column="training_time" property="trainingTime" jdbcType="BIGINT"/>
  	    <result column="release_time" property="releaseTime" jdbcType="BIGINT"/>
  	    <result column="tuning_count" property="tuningCount" jdbcType="INTEGER"/>
  	    <result column="create_user_id" property="createUserId" jdbcType="INTEGER"/>
  	    <result column="remark" property="remark" jdbcType="VARCHAR"/>
  	    <result column="sample_review" property="sampleReview" jdbcType="VARCHAR"/>
  	    <result column="model_url" property="modelUrl" jdbcType="VARCHAR"/>
  	    <result column="seg_image_url" property="segmentationStatisticsImageUrl" jdbcType="VARCHAR"/>
  	    <result column="bad_image_url" property="badTopCountImageUrl" jdbcType="VARCHAR"/>
  	    <result column="roc_test_image_url" property="rocTestImageUrl" jdbcType="VARCHAR"/>
  	    <result column="roc_train_image_url" property="rocTrainImageUrl" jdbcType="VARCHAR"/>
  	    <result column="roc_validate_image_url" property="rocValidateImageUrl" jdbcType="VARCHAR"/>
  	    <result column="ks_test_image_url" property="ksTestImageUrl" jdbcType="VARCHAR"/>
  	    <result column="ks_train_image_url" property="ksTrainImageUrl" jdbcType="VARCHAR"/>
  	    <result column="ks_validate_image_url" property="ksValidateImageUrl" jdbcType="VARCHAR"/>
  	    <result column="pre_finish" property="preFinish" jdbcType="INTEGER"/>
  </resultMap>


  <sql id="Base_Column_List" >
        
  </sql>

	<select id="selectExperimentById" resultMap="ExperimentMap">
		select * 
		from experiment
		where id = #{id}
	</select>

	<update id="updatePreprocessStatus">
		update experiment 
		set pre_finish = #{experimentId} 
		where id = #{experimentId}
	</update>

	<update id="updateExperimentStatus">
		update experiment 
		set status = #{status} 
		where id = #{experimentId}
	</update>

	<select id="findList" resultMap="ExperimentMap" parameterType="cn.realai.online.core.entity.Experiment">
		SELECT  *  FROM  experiment
		<where>
			1=1
			<if test="name!=null and name!=''">
				AND	name LIKE CONCAT('%',#{name},'%')
			</if>
			<if test="status!=null">
				AND	status= #{status}
			</if>
			<if test="releasStatus!=null">
				AND	releas_status= #{releasStatus}
			</if>
		</where>
	</select>

	<delete id="deleteExperimentByIds" parameterType="java.lang.Long">
		DELETE FROM experiment
		<where>
			<choose>
				<when test="ids!=null and ids.size()>0">
					<foreach collection="ids" item="id" separator="," open="id in(" close=")">
						#{id}
					</foreach>
				</when>
				<otherwise>
					1=2
				</otherwise>
			</choose>
		</where>
	</delete>

  
</mapper> 